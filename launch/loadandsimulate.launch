<?xml version="1.0"?>
<launch>
	<!-- these are the arguments you can pass this launch file, for example paused:=true -->
	<arg name="model" />
	<arg name="robot_name" default="basic_robot" />
	<arg name="jpub_gui" default="false"/>
  	<arg name="paused" default="false"/>
  	<arg name="use_sim_time" default="true"/>
  	<arg name="gazebo_gui" default="true"/>
  	<arg name="gazebo_world" default="worlds/empty.world" />
  	<arg name="rviz_config" default="$(find rviz)/default.rviz" />
  	<arg name="headless" default="false"/>
  	<arg name="debug" default="false"/>
	<!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
	<include file="$(find gazebo_ros)/launch/empty_world.launch" ns="/">
    	<arg name="world_name" value="$(arg gazebo_world)"/>
    	<!-- more default parameters can be changed here -->
    	<arg name="debug" value="$(arg debug)" />
    	<arg name="gui" value="$(arg gazebo_gui)" />
    	<arg name="paused" value="$(arg paused)"/>
    	<arg name="use_sim_time" value="$(arg use_sim_time)"/>
    	<arg name="headless" value="$(arg headless)"/>
    	<arg name="extra_arg" value="-e ode" />
	</include>
	<!-- load the robot_description in ROS Parameter Server -->
	<param name="robot_description" command="$(find xacro)/xacro.py $(arg model) prefix:=$(arg robot_name)" />
	<param name="use_gui" value="$(arg jpub_gui)"/>
	<param name="tf_prefix" value="$(arg robot_name)" />
	
	<node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />
	<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"/>
	
	<!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  	<node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
		args="-urdf -model $(arg robot_name) -param robot_description"/>
	<!-- now launch rviz -->	
	<node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rviz_config)" />
</launch>
